events { worker_connections 1024; }

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';
  access_log /var/log/nginx/access.log main;
  error_log  /var/log/nginx/error.log warn;

  # Resolver para proxy a dominio (necesario dentro de Docker)
  resolver 1.1.1.1 1.0.0.1 ipv6=off;

  server {
    listen 80;
    server_name odonto.chilldigital.tech;
    root /usr/share/nginx/html;
    index index.html;

    # --- CORS (si querés mantenerlo abierto) ---
    add_header Access-Control-Allow-Origin * always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;

    # Preflight
    if ($request_method = 'OPTIONS') {
      add_header Access-Control-Allow-Origin * always;
      add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
      add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
      add_header Access-Control-Max-Age 86400;
      return 204;
    }

    # --- API -> N8N Webhooks (mismo origen para evitar CORS) ---
    location /api/ {
      # Reescribe /api/... -> /webhook/...
      rewrite ^/api/(.*)$ /webhook/$1 break;

      proxy_pass https://n8n.chilldigital.tech;
      proxy_set_header Host n8n.chilldigital.tech;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";

      proxy_buffering off;
      proxy_request_buffering off;

      proxy_connect_timeout 60s;
      proxy_send_timeout 60s;
      proxy_read_timeout 60s;

      proxy_ssl_server_name on;
    }

    # (Opcional) Exponer UI de n8n bajo /n8n/ desde el mismo dominio
    # Requiere que Cloudflare permita llegar por https al dominio n8n
    location /n8n/ {
      rewrite ^/n8n/(.*)$ /$1 break;
      proxy_pass https://n8n.chilldigital.tech;
      proxy_set_header Host n8n.chilldigital.tech;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_ssl_server_name on;
    }

    # --- Sitio estático ---
    location = /index.html {
      add_header Cache-Control "no-cache, no-store, must-revalidate";
      add_header Pragma "no-cache";
      add_header Expires 0;
    }

    location / {
      try_files $uri $uri/ /index.html;
    }

    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff2?|ttf|eot)$ {
      expires 1y;
      add_header Cache-Control "public, immutable";
      try_files $uri =404;
    }

    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json application/xml image/svg+xml;

    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    server_tokens off;

    client_max_body_size 10M;
    client_body_timeout 60s;
    client_header_timeout 60s;

    location /health {
      access_log off;
      return 200 "healthy\n";
      add_header Content-Type text/plain;
    }
  }
}
